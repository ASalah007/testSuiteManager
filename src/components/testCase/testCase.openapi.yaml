paths:
  /testSuite/{testSuiteId}/testCases/:
    post:                 
      tags:            
        - TestCase         
      summary: Creates a new TestCase linked to a TestSuite
      produces:
      - application/json
      parameters:    
      - in: path
        name: testSuiteId
        schema:
          type: string
          required: True
          description: Id of the testSuite that the created testCase will be linked to
      requestBody:          
        name: create TestCase     
        description: It enables a user to create a testCase that belongs to a specified testSuite
        required: True
        content:
          application/json:
            schema:          
              $ref: '#/definitions/testCase' 

      responses:      
        201:
          description: An object with testCase details
          content:
            application/json:
              schema:
                $ref: '#/definitions/testCaseResponse'


  /testCases/{testCaseId}:
    get:                 
      tags:            
        - TestCase         
      summary: Fetches a TestCase with specified Id
      produces:
      - application/json
      parameters:    
      - in: path
        name: testCaseId
        schema:
          type: string
          required: True
          description: Id of the testCase
      responses:      
        200:
          description: An object with testCase details
          content:
            application/json:
              schema:
                $ref: '#/definitions/testCaseResponse'
    patch:
      tags:
        - TestCase         
      summary: Creates a new TestCase linked to a TestSuite
      produces:
      - application/json
      parameters:    
      - in: path
        name: testCaseId
        schema:
          type: string
          required: True
          description: Id of the testCase
      requestBody:          
        name: update test case     
        description: It enables a user to update a testCase
        required: True
        content:
          application/json:
            schema:          
              $ref: '#/definitions/updateTestCase' 

      responses:      
        200:
          description: An object with testCase details
          content:
            application/json:
              schema:
                $ref: '#/definitions/testCaseResponse'

  /testCases/:
    get:                 
      tags:               
        - TestCase         
      summary: lists testCases
      produces:
      - application/json
      parameters:         
      - in: query
        name: limit
        schema: 
          type: integer
        description: limit number of entities
      - in: query
        name: skip
        schema: 
          type: integer
        description: skip number of entities
      - in: query
        name: isSuccessful
        schema: 
          type: boolean
      - in: query
        name: validationTag
        schema:
          type: object
          properties:
            validationTag:
              type: object
          required:
            - validationTag
      - in: query
        name: testSuite
        schema:
          type: object
          properties:
            testSuite:
              type: object
              properties:
                id: 
                  type: string
                  example: "507f1f77bcf86cd799439011"
              required:
                - id
        
      responses:      
        200:
          description: list of testCases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/testCaseResponse'
definitions:        # Schema defination for request body
  testCase:
    type: object
    properties:
      isSuccessful:
        type: boolean
      metaData:
        type: object
  testCaseResponse:
    type: object
    properties:
      id:
        type: string
        example: 507f1f77bcf86cd799439011
      isSuccessful:
        type: boolean
      metaData:
        type: object
      parent:
        type: object
        properties:
          testSuite:
            type: object
            properties:
              id:
                type: string
                example: 507f1f77bcf86cd799439011
  updateTestCase:
    type: object
    properties:
      isSuccessful:
        type: boolean
        default: false

